"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminAuth_1 = require("../middleware/adminAuth");
const controllers_1 = require("../../providers/controllers");
const multer_1 = __importDefault(require("../config/multer"));
const adminRouter = express_1.default.Router();
adminRouter.post('/login', (req, res) => controllers_1.aController.adminLogin(req, res));
adminRouter.get('/get/:adminId', adminAuth_1.adminAuth, (req, res) => controllers_1.aController.getAdminData(req, res));
adminRouter.put('/update/:adminId', adminAuth_1.adminAuth, (req, res) => controllers_1.aController.updateProfile(req, res));
adminRouter.get('/users', adminAuth_1.adminAuth, (req, res) => controllers_1.aController.getUsers(req, res));
adminRouter.patch('/users/block/:userId', adminAuth_1.adminAuth, (req, res) => controllers_1.aController.blockUser(req, res));
adminRouter.get('/theaters', adminAuth_1.adminAuth, (req, res) => controllers_1.aController.getTheaters(req, res));
adminRouter.patch('/theaters/block/:theaterId', adminAuth_1.adminAuth, (req, res) => controllers_1.aController.blockTheater(req, res));
adminRouter.get('/screens/:theaterId', adminAuth_1.adminAuth, (req, res) => controllers_1.scnController.findScreensInTheater(req, res));
adminRouter.get('/screens/seat/:seatId', adminAuth_1.adminAuth, (req, res) => controllers_1.screenSeatController.findScreenSeatById(req, res));
adminRouter.put('/screens/seat/update/:seatId', adminAuth_1.adminAuth, (req, res) => controllers_1.screenSeatController.updateScreenSeat(req, res));
adminRouter.post('/upcoming/add', adminAuth_1.adminAuth, multer_1.default.single('image'), (req, res) => controllers_1.upcController.addUpcomingMovies(req, res));
adminRouter.delete('/upcoming/delete/:upcomingId', adminAuth_1.adminAuth, (req, res) => controllers_1.upcController.deleteUpcomingMovies(req, res));
adminRouter.get('/upcomings', adminAuth_1.adminAuth, (req, res) => controllers_1.upcController.getUpcomings(req, res));
adminRouter.get('/upcoming/get/:upcomingId', adminAuth_1.adminAuth, (req, res) => controllers_1.upcController.findUpcomingById(req, res));
adminRouter.put('/upcoming/edit/:upcomingId', adminAuth_1.adminAuth, (req, res) => controllers_1.upcController.updateUpcomingMovies(req, res));
adminRouter.patch('/upcoming/edit/image/:upcomingId', multer_1.default.single('image'), adminAuth_1.adminAuth, (req, res) => controllers_1.upcController.updateUpcomingImage(req, res));
adminRouter.post('/movie/add', adminAuth_1.adminAuth, multer_1.default.single('image'), (req, res) => controllers_1.mController.addMovies(req, res));
adminRouter.delete('/movie/delete/:movieId', adminAuth_1.adminAuth, (req, res) => controllers_1.mController.deleteMovies(req, res));
adminRouter.get('/movies', adminAuth_1.adminAuth, (req, res) => controllers_1.mController.getMovies(req, res));
adminRouter.get('/movie/get/:movieId', adminAuth_1.adminAuth, (req, res) => controllers_1.mController.findMovieById(req, res));
adminRouter.put('/movie/edit/:movieId', adminAuth_1.adminAuth, (req, res) => controllers_1.mController.updateMovies(req, res));
adminRouter.patch('/movie/edit/image/:movieId', multer_1.default.single('image'), adminAuth_1.adminAuth, (req, res) => controllers_1.mController.updateImage(req, res));
adminRouter.get('/tickets', adminAuth_1.adminAuth, (req, res) => controllers_1.ticketController.getAllTickets(req, res));
adminRouter.get('/chart/all', adminAuth_1.adminAuth, (req, res) => controllers_1.ticketController.getAllChartData(req, res));
exports.default = adminRouter;
