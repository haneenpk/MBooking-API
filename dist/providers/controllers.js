"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ticketController = exports.chatController = exports.showSeatController = exports.showController = exports.mController = exports.upcController = exports.screenSeatController = exports.scnController = exports.tController = exports.aController = exports.uController = exports.chatUseCase = void 0;
const adminController_1 = require("../adapters/controllers/adminController");
const screenController_1 = require("../adapters/controllers/screenController");
const screenSeatController_1 = require("../adapters/controllers/screenSeatController");
const theaterController_1 = require("../adapters/controllers/theaterController");
const userController_1 = require("../adapters/controllers/userController");
const upcomingController_1 = require("../adapters/controllers/upcomingController");
const MovieController_1 = require("../adapters/controllers/MovieController");
const showController_1 = require("../adapters/controllers/showController");
const showSeatController_1 = require("../adapters/controllers/showSeatController");
const chatController_1 = require("../adapters/controllers/chatController");
const ticketController_1 = require("../adapters/controllers/ticketController");
const adminRepository_1 = require("../infrastructure/repositories/adminRepository");
const screenRepository_1 = require("../infrastructure/repositories/screenRepository");
const screenSeatRepository_1 = require("../infrastructure/repositories/screenSeatRepository");
const theaterRepository_1 = require("../infrastructure/repositories/theaterRepository");
const tempTheaterRepository_1 = require("../infrastructure/repositories/tempTheaterRepository");
const upcomingRepository_1 = require("../infrastructure/repositories/upcomingRepository");
const movieRepository_1 = require("../infrastructure/repositories/movieRepository");
const showRepository_1 = require("../infrastructure/repositories/showRepository");
const showSeatRepository_1 = require("../infrastructure/repositories/showSeatRepository");
const userRepository_1 = require("../infrastructure/repositories/userRepository");
const tempUserRepository_1 = require("../infrastructure/repositories/tempUserRepository");
const chatRepository_1 = require("../infrastructure/repositories/chatRepository");
const tempTicketRepository_1 = require("../infrastructure/repositories/tempTicketRepository");
const ticketRepository_1 = require("../infrastructure/repositories/ticketRepository");
const upcomingUseCase_1 = require("../useCases/upcomingUseCase");
const movieUseCase_1 = require("../useCases/movieUseCase");
const showSeatUseCase_1 = require("../useCases/showSeatUseCase");
const showUseCase_1 = require("../useCases/showUseCase");
const adminUseCase_1 = require("../useCases/adminUseCase");
const screenSeatUseCase_1 = require("../useCases/screenSeatUseCase");
const screenUseCase_1 = require("../useCases/screenUseCase");
const theaterUseCase_1 = require("../useCases/theaterUseCase");
const userUseCase_1 = require("../useCases/userUseCase");
const chatUseCase_1 = require("../useCases/chatUseCase");
const ticketUseCase_1 = require("../useCases/ticketUseCase");
const bcryptPassword_1 = require("./bcryptPassword");
const jwtToken_1 = require("./jwtToken");
const nodemailer_1 = require("./nodemailer");
const otpGenerator_1 = require("./otpGenerator");
const encrypt = new bcryptPassword_1.Encrypt();
const jwtToken = new jwtToken_1.JWTToken();
const mailSender = new nodemailer_1.MailSender();
const otpGenerator = new otpGenerator_1.GenerateOtp();
const adminRepository = new adminRepository_1.AdminRepository();
const userRepository = new userRepository_1.UserRepository();
const tempUserRepository = new tempUserRepository_1.TempUserRepository();
const thrRepository = new theaterRepository_1.TheaterRepository();
const tempThrRepository = new tempTheaterRepository_1.TempTheaterRepository();
const scnRepositoty = new screenRepository_1.ScreenRepository();
const screenSeatRepositoty = new screenSeatRepository_1.ScreenSeatRepository();
const upcRepositoty = new upcomingRepository_1.UpcomingRepository();
const movieRepositoty = new movieRepository_1.MovieRepository();
const showRepositoty = new showRepository_1.ShowRepository();
const showSeatRepositoty = new showSeatRepository_1.ShowSeatRepository();
const chatRepository = new chatRepository_1.ChatRepository();
const tempTicketRepository = new tempTicketRepository_1.TempTicketRepository();
const ticketRepository = new ticketRepository_1.TicketRepository();
const adminUseCase = new adminUseCase_1.AdminUseCase(encrypt, adminRepository, jwtToken);
const userUseCase = new userUseCase_1.UserUseCase(userRepository, tempUserRepository, encrypt, jwtToken, mailSender);
const thrUseCase = new theaterUseCase_1.TheaterUseCase(thrRepository, tempThrRepository, encrypt, jwtToken, mailSender, otpGenerator);
const scnUseCase = new screenUseCase_1.ScreenUseCase(scnRepositoty, screenSeatRepositoty, thrRepository);
const screenSeatUseCase = new screenSeatUseCase_1.ScreenSeatUseCase(screenSeatRepositoty, scnRepositoty);
const upcUseCase = new upcomingUseCase_1.UpcomingUseCase(upcRepositoty);
const movieUseCase = new movieUseCase_1.MovieUseCase(movieRepositoty);
const showUseCase = new showUseCase_1.ShowUseCase(showRepositoty, showSeatRepositoty, movieRepositoty, scnRepositoty, screenSeatRepositoty, thrRepository);
const showSeatUseCase = new showSeatUseCase_1.ShowSeatUseCase(showSeatRepositoty);
exports.chatUseCase = new chatUseCase_1.ChatUseCase(chatRepository);
const ticketUseCase = new ticketUseCase_1.TicketUseCase(ticketRepository, tempTicketRepository, showRepositoty, showSeatRepositoty, userRepository);
exports.uController = new userController_1.UserController(userUseCase, otpGenerator, encrypt);
exports.aController = new adminController_1.AdminController(adminUseCase, userUseCase, thrUseCase);
exports.tController = new theaterController_1.TheaterController(thrUseCase);
exports.scnController = new screenController_1.ScreenController(scnUseCase);
exports.screenSeatController = new screenSeatController_1.ScreenSeatController(screenSeatUseCase);
exports.upcController = new upcomingController_1.UpcomingController(upcUseCase);
exports.mController = new MovieController_1.MovieController(movieUseCase);
exports.showController = new showController_1.ShowController(showUseCase);
exports.showSeatController = new showSeatController_1.ShowSeatController(showSeatUseCase);
exports.chatController = new chatController_1.ChatController(exports.chatUseCase);
exports.ticketController = new ticketController_1.TicketController(ticketUseCase);
